spring.application.name=resource-processor
server.port=8083
song.service.url=${SONG_SERVICE_URL:http://localhost:8080/songs}
storage.service.url=${STORAGE_SERVICE_URL:http://localhost:8080/songs}
resource.service.url=${RESOURCE_SERVICE_URL:http://localhost:8081/resources}
eureka.client.service-url.defaultZone= ${EUREKA_URI:http://localhost:8761/eureka}
eureka.instance.prefer-ip-address= true

spring.kafka.bootstrap-servers=${KAFKA_URL:localhost:39092,localhost:19092,localhost:29092}
kafka.topic.resource=${KAFKA_TOPIC_RESOURCE:resource}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:resource-processor-group}
kafka.topic.resource-processed=${KAFKA_TOPIC_RESOURCE_PROCESSED:resource-processed}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# application.properties
logging.level.org.apache.kafka=DEBUG
logging.level.org.springframework.kafka=DEBUG

management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true