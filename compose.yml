services:
  song-db:
    image: postgres:16-alpine
    container_name: song-db
    environment:
      POSTGRES_DB: ${SONGDB_NAME}
      POSTGRES_USER: ${SONGDB_USER}
      POSTGRES_PASSWORD: ${SONGDB_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - ./init-scripts/song-db:/docker-entrypoint-initdb.d

  resource-db:
    image: postgres:16-alpine
    container_name: resource-db
    environment:
      POSTGRES_DB: ${RESOURCEDB_NAME}
      POSTGRES_USER: ${RESOURCEDB_USER}
      POSTGRES_PASSWORD: ${RESOURCEDB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - ./init-scripts/resource-db:/docker-entrypoint-initdb.d

  song-service:
    build: ./song-service
    deploy:
      replicas: 2
    ports:
      - "8079-8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SONG_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${SONGDB_USER}
      SPRING_DATASOURCE_PASSWORD: ${SONGDB_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      EUREKA_URI: ${EUREKA_URI}

  resource-service:
    build: ./resource-service
    container_name: resource-service
    ports:
      - "8081:8081"
    environment:
      SONG_SERVICE_URL: ${SONG_SERVICE_URL}
      SPRING_DATASOURCE_URL: ${RESOURCE_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${RESOURCEDB_USER}
      SPRING_DATASOURCE_PASSWORD: ${RESOURCEDB_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      EUREKA_URI: ${EUREKA_URI}
  eureka:
    build: ./eureka
    container_name: eureka
    ports:
      - "8761:8761"