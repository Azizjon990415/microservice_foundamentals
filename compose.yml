services:
  song-db:
    image: postgres:16-alpine
    container_name: song-db
    environment:
      POSTGRES_DB: ${SONGDB_NAME}
      POSTGRES_USER: ${SONGDB_USER}
      POSTGRES_PASSWORD: ${SONGDB_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - ./init-scripts/song-db:/docker-entrypoint-initdb.d

  resource-db:
    image: postgres:16-alpine
    container_name: resource-db
    environment:
      POSTGRES_DB: ${RESOURCEDB_NAME}
      POSTGRES_USER: ${RESOURCEDB_USER}
      POSTGRES_PASSWORD: ${RESOURCEDB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - ./init-scripts/resource-db:/docker-entrypoint-initdb.d
  storage-db:
    image: postgres:16-alpine
    container_name: storage-db
    environment:
      POSTGRES_DB: ${STORAGEDB_NAME}
      POSTGRES_USER: ${STORAGEDB_USER}
      POSTGRES_PASSWORD: ${STORAGEDB_PASSWORD}
    ports:
      - "5435:5432"
    volumes:
      - ./init-scripts/storage-db:/docker-entrypoint-initdb.d

  song-service:
    build: ./song-service
    deploy:
      replicas: 2
    ports:
      - "8079-8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SONG_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${SONGDB_USER}
      SPRING_DATASOURCE_PASSWORD: ${SONGDB_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      EUREKA_URI: ${EUREKA_URI}

  resource-service:
    build: ./resource-service
    container_name: resource-service
    ports:
      - "8081:8081"
    environment:
      SONG_SERVICE_URL: ${SONG_SERVICE_URL}
      STORAGE_SERVICE_URL: ${STORAGE_SERVICE_URL}
      SPRING_DATASOURCE_URL: ${RESOURCE_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${RESOURCEDB_USER}
      SPRING_DATASOURCE_PASSWORD: ${RESOURCEDB_PASSWORD}
      AWS_URL: ${AWS_URL}
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      EUREKA_URI: ${EUREKA_URI}
      KAFKA_URL: ${KAFKA_URL}
      KAFKA_TOPIC_RESOURCE: ${KAFKA_TOPIC_RESOURCE}
      KAFKA_CONSUMER_GROUP_ID: ${KAFKA_CONSUMER_GROUP_ID}
      KAFKA_TOPIC_RESOURCE_PROCESSED: ${KAFKA_TOPIC_RESOURCE_PROCESSED}
  storage-service:
    build: ./storage-service
    container_name: storage-service
    ports:
      - "8081:8081"
    environment:
      SONG_SERVICE_URL: ${SONG_SERVICE_URL}
      SPRING_DATASOURCE_URL: ${RESOURCE_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${RESOURCEDB_USER}
      SPRING_DATASOURCE_PASSWORD: ${RESOURCEDB_PASSWORD}
      AWS_URL: ${AWS_URL}
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      EUREKA_URI: ${EUREKA_URI}
      KAFKA_URL: ${KAFKA_URL}
      KAFKA_TOPIC_RESOURCE: ${KAFKA_TOPIC_RESOURCE}
      KAFKA_CONSUMER_GROUP_ID: ${KAFKA_CONSUMER_GROUP_ID}
      KAFKA_TOPIC_RESOURCE_PROCESSED: ${KAFKA_TOPIC_RESOURCE_PROCESSED}
  resource-processor:
    build: ./resource-processor
    container_name: resource-processor
    ports:
      - "8083:8083"
    environment:
      SONG_SERVICE_URL: ${SONG_SERVICE_URL}
      RESOURCE_SERVICE_URL: ${RESOURCE_SERVICE_URL}
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      EUREKA_URI: ${EUREKA_URI}
      KAFKA_URL: ${KAFKA_URL}
      KAFKA_TOPIC_RESOURCE: ${KAFKA_TOPIC_RESOURCE}
      KAFKA_CONSUMER_GROUP_ID: ${KAFKA_CONSUMER_GROUP_ID}
      KAFKA_TOPIC_RESOURCE_PROCESSED: ${KAFKA_TOPIC_RESOURCE_PROCESSED}
  api-gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "80:80"
    environment:
      EUREKA_URI: ${EUREKA_URI}
    depends_on:
      - eureka
  eureka:
    build: ./eureka
    container_name: eureka
    ports:
      - "8761:8761"
  localstack:
    container_name: localstack
    image: localstack/localstack
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=${DEBUG:-0}
    volumes:
      - "./localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./localstack/init:/etc/localstack/init/ready.d"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: confluentinc/cp-server:7.1.2
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
      - "1092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1

  kafka2:
    image: confluentinc/cp-server:7.1.2
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "2092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1


  kafka3:
    image: confluentinc/cp-server:7.1.2
    depends_on:
      - zookeeper
    ports:
      - "39092:39092"
      - "3092:9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka:9092,PLAINTEXT://kafka2:9092,PLAINTEXT://kafka3:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 15s