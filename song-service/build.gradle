plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.springframework.cloud.contract' version '3.1.8'
    id 'maven-publish' // Add this plugin
}

group = 'com.epam'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.1.8'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier:3.1.8'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-verifier:3.1.8'
    testImplementation 'org.junit.vintage:junit-vintage-engine'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}
contracts {
    baseClassForTests = 'com.epam.songservice.contract.BaseTestClass' // Replace with your base test class
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = 'song-service-stubs' // Customize the artifact ID
        }
    }
    repositories {
        mavenLocal() // Publish to the local .m2 repository
    }
}
tasks.named('test') {
    useJUnitPlatform()
    exclude '**/BaseTestClass.class'
}

