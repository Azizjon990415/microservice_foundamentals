plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.epam'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
def javaConvention = project.convention.getPlugin(org.gradle.api.plugins.JavaPluginConvention)
javaConvention.sourceCompatibility = JavaVersion.VERSION_17
javaConvention.targetCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
configurations.all {
    exclude module: 'log4j-to-slf4j'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.1.8'
    implementation 'software.amazon.awssdk:s3:2.30.36'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'io.cucumber:cucumber-java:7.14.0'
    testImplementation 'io.cucumber:cucumber-junit:7.14.0'
    testImplementation 'io.cucumber:cucumber-spring:7.14.0'
    testImplementation 'org.junit.vintage:junit-vintage-engine'
    testImplementation 'io.findify:s3mock_2.13:0.2.6'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

}

tasks.named('test') {
    useJUnitPlatform()
    include '**/*Test.class'
}
